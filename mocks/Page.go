// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
	parser "github.com/vfunin/crawler/internal/parser"
)

// Page is an autogenerated mock type for the Page type
type Page struct {
	mock.Mock
}

// Links provides a mock function with given fields:
func (_m *Page) Links() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// Parse provides a mock function with given fields: url, reader
func (_m *Page) Parse(url string, reader io.Reader) (parser.Page, error) {
	ret := _m.Called(url, reader)

	var r0 parser.Page
	if rf, ok := ret.Get(0).(func(string, io.Reader) parser.Page); ok {
		r0 = rf(url, reader)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(parser.Page)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, io.Reader) error); ok {
		r1 = rf(url, reader)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Title provides a mock function with given fields:
func (_m *Page) Title() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
